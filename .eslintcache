[{"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\index.tsx":"1","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\serviceWorker.ts":"2","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\App.tsx":"3","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Home.tsx":"4","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\CustomLink.tsx":"5","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Play.tsx":"6","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Make.tsx":"7","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\services\\LocalDB.ts":"8","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\QuestionSetSlot.tsx":"9","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\models\\QuestionSet.tsx":"10","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\AddItemSlot.tsx":"11","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\EditableLink.tsx":"12","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\EditQuestionSet.tsx":"13","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\models\\Question.tsx":"14","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\QuestionSlot.tsx":"15","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\EditQuestion.tsx":"16","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\AnswerSlot.tsx":"17","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\StrNumInput.tsx":"18","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\AddAnswerSlot.tsx":"19"},{"size":530,"mtime":1609970539165,"results":"20","hashOfConfig":"21"},{"size":6246,"mtime":1609970600045,"results":"22","hashOfConfig":"21"},{"size":1356,"mtime":1610074882216,"results":"23","hashOfConfig":"21"},{"size":986,"mtime":1610051014385,"results":"24","hashOfConfig":"21"},{"size":503,"mtime":1610051047272,"results":"25","hashOfConfig":"21"},{"size":519,"mtime":1610051010579,"results":"26","hashOfConfig":"21"},{"size":2792,"mtime":1610147009908,"results":"27","hashOfConfig":"21"},{"size":1956,"mtime":1610073844248,"results":"28","hashOfConfig":"21"},{"size":990,"mtime":1610068855457,"results":"29","hashOfConfig":"21"},{"size":1115,"mtime":1610073737707,"results":"30","hashOfConfig":"21"},{"size":3695,"mtime":1610146873800,"results":"31","hashOfConfig":"21"},{"size":5205,"mtime":1610139874979,"results":"32","hashOfConfig":"21"},{"size":3967,"mtime":1610147013411,"results":"33","hashOfConfig":"21"},{"size":2919,"mtime":1610138436027,"results":"34","hashOfConfig":"21"},{"size":731,"mtime":1610074776823,"results":"35","hashOfConfig":"21"},{"size":4150,"mtime":1610151865186,"results":"36","hashOfConfig":"21"},{"size":646,"mtime":1610139259997,"results":"37","hashOfConfig":"21"},{"size":5877,"mtime":1610139864745,"results":"38","hashOfConfig":"21"},{"size":4029,"mtime":1610146857544,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1p9mwhr",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\index.tsx",[],[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\serviceWorker.ts",["86","87"],"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        );\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It\"s the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can\"t reload the page.\r\n    fetch(swUrl, {\r\n        headers: { \"Service-Worker\": \"script\" }\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\App.tsx",["88"],"import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, useParams } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"./assets/main.css\";\r\nimport Home from \"./pages/Home\";\r\nimport Make from \"./pages/Make\";\r\nimport Play from \"./pages/Play\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport EditQuestionSet from \"./pages/EditQuestionSet\";\r\nimport EditQuestion from \"./pages/EditQuestion\";\r\n\r\nlibrary.add(fas);\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/play\" component={Play} />\r\n                <Route exact path=\"/make\" component={Make} />\r\n                <Route exact path=\"/make/:id\" component={EditQuestionSetComponent} />\r\n                <Route exact path=\"/make/:setId/:questionId\" component={EditQuestionComponent} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nfunction EditQuestionSetComponent() {\r\n    const { id } = useParams();\r\n\r\n    return (\r\n        <EditQuestionSet id={id} />\r\n    );\r\n}\r\n\r\nfunction EditQuestionComponent() {\r\n    const { setId, questionId } = useParams();\r\n\r\n    return (\r\n        <EditQuestion setId={setId} questionId={questionId} />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Home.tsx",["89"],"import React from \"react\";\r\nimport CustomLink from \"../components/CustomLink\";\r\n\r\ntype HomeProps = {\r\n\r\n}\r\n\r\ntype HomeState = {\r\n\r\n}\r\n\r\nexport default class Home extends React.Component<HomeProps, HomeState> {\r\n    constructor(props: HomeProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-screen h-screen flex justify-center items-center\">\r\n                <div className=\"flex flex-col\">\r\n                    <h1 className=\"mb-8 text-6xl\">\r\n                        Family Feud\r\n                    </h1>\r\n                    <CustomLink to=\"/play\" className=\"mb-4 px-3 py-2 bg-gray-600 text-gray-200\">\r\n                        Play\r\n                    </CustomLink>\r\n                    <CustomLink to=\"/make\" className=\"px-3 py-2 bg-gray-600 text-gray-200\">\r\n                        Make\r\n                    </CustomLink>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\CustomLink.tsx",["90"],"import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\ninterface CustomLinkProps extends React.HTMLAttributes<HTMLElement> {\r\n    to: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nexport default function CustomLink(props: CustomLinkProps) {\r\n    const { push } = useHistory();\r\n    const { to, children, ...rest } = props;\r\n    return(\r\n        <div {...rest} className={`${rest.className} cursor-pointer`} onClick={() => push(to)}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Play.tsx",["91"],"import React from \"react\";\r\n\r\ntype PlayProps = {\r\n\r\n}\r\n\r\ntype PlayState = {\r\n\r\n}\r\n\r\nexport default class Play extends React.Component<PlayProps, PlayState> {\r\n    constructor(props: PlayProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-screen h-screen flex justify-center items-center\">\r\n                <div className=\"flex flex-col\">\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Make.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\services\\LocalDB.ts",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\QuestionSetSlot.tsx",["92","93"],"import React from \"react\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport CustomLink from \"./CustomLink\";\r\nimport EditableLink from \"./EditableLink\";\r\n\r\ntype QuestionSetSlotProps = {\r\n    id: string;\r\n    name: string;\r\n    onEditName(id: string, name: string): Promise<void>;\r\n    onDeleteItem(id: string): Promise<void>;\r\n}\r\n\r\ntype QuestionSetSlotState = {\r\n\r\n}\r\n\r\nexport function QuestionSetPlaySlot(props: QuestionSetSlotProps): JSX.Element {\r\n    return (\r\n        <CustomLink to={`/play/${props.id}`} className=\"mb-3 px-3 py-2 bg-gray-600 text-gray-200\">\r\n            {props.name}\r\n        </CustomLink>\r\n    );\r\n}\r\n\r\nexport function QuestionSetMakeSlot(props: QuestionSetSlotProps): JSX.Element {\r\n    const { id, name, onEditName, onDeleteItem } = props;\r\n\r\n    return (\r\n        <EditableLink \r\n            name={name}\r\n            to={`/make/${id}`}\r\n            onEditName={newName => onEditName(id, newName)}\r\n            onDeleteItem={() => onDeleteItem(id)} />\r\n    );\r\n}","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\models\\QuestionSet.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\AddItemSlot.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\EditableLink.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\EditQuestionSet.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\models\\Question.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\QuestionSlot.tsx",["94"],"import React from \"react\";\r\nimport CustomLink from \"./CustomLink\";\r\nimport EditableLink from \"./EditableLink\";\r\n\r\ntype QuestionSlotProps = {\r\n    setId: string;\r\n    questionId: string;\r\n    description: string;\r\n    onEditName(id: string, name: string): Promise<void>;\r\n    onDeleteItem(id: string): Promise<void>;\r\n}\r\n\r\nexport function QuestionMakeSlot(props: QuestionSlotProps): JSX.Element {\r\n    const { setId, questionId, description, onEditName, onDeleteItem } = props;\r\n    return (\r\n        <EditableLink \r\n            name={description}\r\n            to={`/make/${setId}/${questionId}`}\r\n            onEditName={name => onEditName(questionId, name)}\r\n            onDeleteItem={() => onDeleteItem(questionId)} />\r\n    );\r\n}","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\EditQuestion.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\AnswerSlot.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\StrNumInput.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\AddAnswerSlot.tsx",[],{"ruleId":"95","severity":1,"message":"96","line":28,"column":8,"nodeType":"97","messageId":"98","endLine":28,"endColumn":42},{"ruleId":"95","severity":1,"message":"96","line":139,"column":8,"nodeType":"97","messageId":"98","endLine":139,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":16,"column":1,"nodeType":"97","messageId":"98","endLine":16,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":21,"column":5,"nodeType":"99","messageId":"98","endLine":21,"endColumn":13},{"ruleId":"95","severity":1,"message":"96","line":9,"column":16,"nodeType":"97","messageId":"98","endLine":9,"endColumn":59},{"ruleId":"95","severity":1,"message":"96","line":20,"column":5,"nodeType":"99","messageId":"98","endLine":20,"endColumn":13},{"ruleId":"100","severity":1,"message":"101","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":15},{"ruleId":"100","severity":1,"message":"104","line":13,"column":6,"nodeType":"102","messageId":"103","endLine":13,"endColumn":26},{"ruleId":"100","severity":1,"message":"105","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":18},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","FunctionExpression","@typescript-eslint/no-unused-vars","'LocalDB' is defined but never used.","Identifier","unusedVar","'QuestionSetSlotState' is defined but never used.","'CustomLink' is defined but never used."]