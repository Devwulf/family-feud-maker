[{"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\index.tsx":"1","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\serviceWorker.ts":"2","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\App.tsx":"3","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Home.tsx":"4","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\CustomLink.tsx":"5","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Play.tsx":"6","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Make.tsx":"7","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\services\\LocalDB.ts":"8","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\QuestionSetSlot.tsx":"9","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\models\\QuestionSet.tsx":"10","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\AddItemSlot.tsx":"11","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\EditableLink.tsx":"12","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\EditQuestionSet.tsx":"13","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\models\\Question.tsx":"14","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\QuestionSlot.tsx":"15"},{"size":530,"mtime":1609970539165,"results":"16","hashOfConfig":"17"},{"size":6246,"mtime":1609970600045,"results":"18","hashOfConfig":"17"},{"size":1030,"mtime":1610052273066,"results":"19","hashOfConfig":"17"},{"size":986,"mtime":1610051014385,"results":"20","hashOfConfig":"17"},{"size":503,"mtime":1610051047272,"results":"21","hashOfConfig":"17"},{"size":519,"mtime":1610051010579,"results":"22","hashOfConfig":"17"},{"size":2749,"mtime":1610068904337,"results":"23","hashOfConfig":"17"},{"size":1956,"mtime":1610073844248,"results":"24","hashOfConfig":"17"},{"size":990,"mtime":1610068855457,"results":"25","hashOfConfig":"17"},{"size":1115,"mtime":1610073737707,"results":"26","hashOfConfig":"17"},{"size":3599,"mtime":1610051004620,"results":"27","hashOfConfig":"17"},{"size":5143,"mtime":1610051028055,"results":"28","hashOfConfig":"17"},{"size":3710,"mtime":1610074020727,"results":"29","hashOfConfig":"17"},{"size":2500,"mtime":1610073691149,"results":"30","hashOfConfig":"17"},{"size":670,"mtime":1610069295343,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1p9mwhr",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\index.tsx",[],[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\serviceWorker.ts",["72","73"],"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        );\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won\"t work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It\"s the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can\"t reload the page.\r\n    fetch(swUrl, {\r\n        headers: { \"Service-Worker\": \"script\" }\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\App.tsx",["74"],"import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, useParams } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"./assets/main.css\";\r\nimport Home from \"./pages/Home\";\r\nimport Make from \"./pages/Make\";\r\nimport Play from \"./pages/Play\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport EditQuestionSet from \"./pages/EditQuestionSet\";\r\n\r\nlibrary.add(fas);\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/play\" component={Play} />\r\n                <Route exact path=\"/make\" component={Make} />\r\n                <Route exact path=\"/make/:id\" component={EditQuestionSetComponent} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nfunction EditQuestionSetComponent() {\r\n    const { id } = useParams();\r\n\r\n    return (\r\n        <EditQuestionSet id={id} />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Home.tsx",["75"],"import React from \"react\";\r\nimport CustomLink from \"../components/CustomLink\";\r\n\r\ntype HomeProps = {\r\n\r\n}\r\n\r\ntype HomeState = {\r\n\r\n}\r\n\r\nexport default class Home extends React.Component<HomeProps, HomeState> {\r\n    constructor(props: HomeProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-screen h-screen flex justify-center items-center\">\r\n                <div className=\"flex flex-col\">\r\n                    <h1 className=\"mb-8 text-6xl\">\r\n                        Family Feud\r\n                    </h1>\r\n                    <CustomLink to=\"/play\" className=\"mb-4 px-3 py-2 bg-gray-600 text-gray-200\">\r\n                        Play\r\n                    </CustomLink>\r\n                    <CustomLink to=\"/make\" className=\"px-3 py-2 bg-gray-600 text-gray-200\">\r\n                        Make\r\n                    </CustomLink>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\CustomLink.tsx",["76"],"import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\ninterface CustomLinkProps extends React.HTMLAttributes<HTMLElement> {\r\n    to: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nexport default function CustomLink(props: CustomLinkProps) {\r\n    const { push } = useHistory();\r\n    const { to, children, ...rest } = props;\r\n    return(\r\n        <div {...rest} className={`${rest.className} cursor-pointer`} onClick={() => push(to)}>\r\n            {children}\r\n        </div>\r\n    );\r\n}","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Play.tsx",["77"],"import React from \"react\";\r\n\r\ntype PlayProps = {\r\n\r\n}\r\n\r\ntype PlayState = {\r\n\r\n}\r\n\r\nexport default class Play extends React.Component<PlayProps, PlayState> {\r\n    constructor(props: PlayProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-screen h-screen flex justify-center items-center\">\r\n                <div className=\"flex flex-col\">\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\Make.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\services\\LocalDB.ts",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\QuestionSetSlot.tsx",["78","79"],"import React from \"react\";\r\nimport LocalDB from \"../services/LocalDB\";\r\nimport CustomLink from \"./CustomLink\";\r\nimport EditableLink from \"./EditableLink\";\r\n\r\ntype QuestionSetSlotProps = {\r\n    id: string;\r\n    name: string;\r\n    onEditName(id: string, name: string): Promise<void>;\r\n    onDeleteItem(id: string): Promise<void>;\r\n}\r\n\r\ntype QuestionSetSlotState = {\r\n\r\n}\r\n\r\nexport function QuestionSetPlaySlot(props: QuestionSetSlotProps): JSX.Element {\r\n    return (\r\n        <CustomLink to={`/play/${props.id}`} className=\"mb-3 px-3 py-2 bg-gray-600 text-gray-200\">\r\n            {props.name}\r\n        </CustomLink>\r\n    );\r\n}\r\n\r\nexport function QuestionSetMakeSlot(props: QuestionSetSlotProps): JSX.Element {\r\n    const { id, name, onEditName, onDeleteItem } = props;\r\n\r\n    return (\r\n        <EditableLink \r\n            name={name}\r\n            to={`/make/${id}`}\r\n            onEditName={newName => onEditName(id, newName)}\r\n            onDeleteItem={() => onDeleteItem(id)} />\r\n    );\r\n}","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\models\\QuestionSet.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\AddItemSlot.tsx",["80","81","82","83"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n\r\ntype AddItemSlotProps = {\r\n    onAddItem(name: string): Promise<void>;\r\n}\r\n\r\ntype AddItemSlotState = {\r\n    isAdding: boolean;\r\n    name: string;\r\n}\r\n\r\nexport default class AddItemSlot extends React.Component<AddItemSlotProps, AddItemSlotState> {\r\n    constructor(props: AddItemSlotProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAdding: false,\r\n            name: \"\"\r\n        };\r\n\r\n        this.onAddItemStart = this.onAddItemStart.bind(this);\r\n        this.onAddItemStop = this.onAddItemStop.bind(this);\r\n        this.onAddItem = this.onAddItem.bind(this);\r\n    }\r\n\r\n    onAddItemStart(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: true});\r\n    }\r\n\r\n    onAddItemStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isAdding: false});\r\n    }\r\n\r\n    async onAddItem(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { onAddItem: onAddItem } = this.props;\r\n        const { name } = this.state;\r\n        if (!name)\r\n            return;\r\n        \r\n        await onAddItem(name);\r\n        this.setState({name: \"\", isAdding: false});\r\n    }\r\n\r\n    render() {\r\n        const { isAdding, name } = this.state;\r\n\r\n        return(\r\n            <div className=\"transition duration-150 ease-in-out flex flex-row items-center justify-between mr-2 xl:mx-2 border-2 border-dashed rounded-lg border-indigo-700 bg-opacity-0 bg-indigo-700 text-indigo-300 hover:bg-opacity-100 hover:text-indigo-200 cursor-pointer\"\r\n                tabIndex={0}\r\n                onClick={this.onAddItemStart}>\r\n                {(!isAdding && \r\n                    <div className=\"px-4 py-3\">\r\n                        <div className=\"pointer-events-none select-none\">\r\n                            <FontAwesomeIcon icon=\"plus\" className=\"mr-3\" />\r\n                            Add New...\r\n                        </div>\r\n                    </div>\r\n                ) || \r\n                (isAdding && \r\n                    <div className=\"px-2 py-3 flex flex-row w-full\">\r\n                        <input type=\"text\" className=\"px-2 mr-1 w-full rounded bg-indigo-400 text-indigo-900\" \r\n                            value={name} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({name: event.target.value})} />\r\n                        <div className=\"flex flex-row\">\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onAddItem}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onAddItemStop}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\EditableLink.tsx",["84","85","86","87","88","89","90"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport CustomLink from \"./CustomLink\";\r\n\r\ntype EditableLinkProps = {\r\n    name: string;\r\n    to: string;\r\n    onEditName(name: string): Promise<void>;\r\n    onDeleteItem(): Promise<void>;\r\n}\r\n\r\ntype EditableLinkState = {\r\n    isMouseHover: boolean;\r\n    isEditing: boolean;\r\n    newName: string;\r\n}\r\n\r\nexport default class EditableLink extends React.Component<EditableLinkProps, EditableLinkState> {\r\n    constructor(props: EditableLinkProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isMouseHover: false,\r\n            isEditing: false,\r\n            newName: props.name\r\n        };\r\n\r\n        this.onMouseEnter = this.onMouseEnter.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n\r\n        this.onEditNameStart = this.onEditNameStart.bind(this);\r\n        this.onEditNameStop = this.onEditNameStop.bind(this);\r\n        this.onEditName = this.onEditName.bind(this);\r\n        this.onDeleteItem = this.onDeleteItem.bind(this);\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this.setState({isMouseHover: true});\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.setState({isMouseHover: false});\r\n    }\r\n\r\n    onEditNameStart(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: true, newName: this.props.name});\r\n    }\r\n\r\n    onEditNameStop(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onEditName(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { onEditName } = this.props;\r\n        const { newName } = this.state;\r\n        if (!newName)\r\n            return;\r\n\r\n        await onEditName(newName);\r\n        this.setState({isEditing: false});\r\n    }\r\n\r\n    async onDeleteItem(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n        event.stopPropagation();\r\n        const { onDeleteItem } = this.props;\r\n        await onDeleteItem();\r\n    }\r\n\r\n    render() {\r\n        const { name, to } = this.props;\r\n        const { isMouseHover, isEditing, newName } = this.state;\r\n\r\n        return(\r\n            <CustomLink className=\"transition duration-150 ease-in-out flex flex-row items-center justify-between px-4 py-3 mr-2 min-w-40 max-w-40 rounded bg-indigo-600 text-indigo-300 hover:bg-indigo-700 hover:text-indigo-200 cursor-pointer\"\r\n                to={to}\r\n                onMouseEnter={this.onMouseEnter}\r\n                onMouseLeave={this.onMouseLeave}>\r\n                {(!isEditing && \r\n                    <>\r\n                        <span className=\"truncate pointer-events-none select-none\">{name}</span>\r\n                        <div className={`${isMouseHover ? \"\" : \"hidden\"} flex flex-row`}>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                                onClick={this.onEditNameStart}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"pencil-alt\" />\r\n                            </button>\r\n                            <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                                onClick={this.onDeleteItem}>\r\n                                <FontAwesomeIcon className=\"text-xs\" icon=\"trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                ) || \r\n                (isEditing && \r\n                    <div className=\"flex flex-row w-full\">\r\n                        <input type=\"text\" className=\"px-2 mr-2 w-full rounded bg-indigo-400 text-indigo-900\" \r\n                            value={newName} \r\n                            onClick={event => event.stopPropagation()}\r\n                            onChange={event => this.setState({newName: event.target.value})} />\r\n                        <button className=\"transition duration-150 ease-in-out px-2 mr-1 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\" style={{paddingTop: \"0.35rem\", paddingBottom: \"0.35rem\"}}\r\n                            onClick={this.onEditName}>\r\n                            <FontAwesomeIcon className=\"text-xs\" icon=\"check\" />\r\n                        </button>\r\n                        <button className=\"transition duration-150 ease-in-out px-2 flex items-center rounded hover:shadow-lg bg-indigo-800 text-indigo-300 hover:bg-indigo-900 hover:text-indigo-200\"\r\n                            onClick={this.onEditNameStop}>\r\n                            <FontAwesomeIcon className=\"text-xs\" icon=\"times\" />\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </CustomLink>\r\n        );\r\n    }\r\n}","C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\pages\\EditQuestionSet.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\models\\Question.tsx",[],"C:\\Users\\markm\\Projects\\Web\\family-feud-maker\\src\\components\\QuestionSlot.tsx",["91"],"import React from \"react\";\r\nimport CustomLink from \"./CustomLink\";\r\nimport EditableLink from \"./EditableLink\";\r\n\r\ntype QuestionSlotProps = {\r\n    id: string;\r\n    description: string;\r\n    onEditName(id: string, name: string): Promise<void>;\r\n    onDeleteItem(id: string): Promise<void>;\r\n}\r\n\r\nexport function QuestionMakeSlot(props: QuestionSlotProps): JSX.Element {\r\n    const { id, description, onEditName, onDeleteItem } = props;\r\n    return (\r\n        <EditableLink \r\n            name={description}\r\n            to={`/make/question/${props.id}`}\r\n            onEditName={name => onEditName(id, name)}\r\n            onDeleteItem={() => onDeleteItem(id)} />\r\n    );\r\n}",{"ruleId":"92","severity":1,"message":"93","line":28,"column":8,"nodeType":"94","messageId":"95","endLine":28,"endColumn":42},{"ruleId":"92","severity":1,"message":"93","line":139,"column":8,"nodeType":"94","messageId":"95","endLine":139,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":15,"column":1,"nodeType":"94","messageId":"95","endLine":15,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":21,"column":5,"nodeType":"96","messageId":"95","endLine":21,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":9,"column":16,"nodeType":"94","messageId":"95","endLine":9,"endColumn":59},{"ruleId":"92","severity":1,"message":"93","line":20,"column":5,"nodeType":"96","messageId":"95","endLine":20,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":15},{"ruleId":"97","severity":1,"message":"101","line":13,"column":6,"nodeType":"99","messageId":"100","endLine":13,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":27,"column":5,"nodeType":"96","messageId":"95","endLine":27,"endColumn":72},{"ruleId":"92","severity":1,"message":"93","line":32,"column":5,"nodeType":"96","messageId":"95","endLine":32,"endColumn":74},{"ruleId":"92","severity":1,"message":"93","line":37,"column":5,"nodeType":"96","messageId":"95","endLine":37,"endColumn":76},{"ruleId":"92","severity":1,"message":"93","line":48,"column":5,"nodeType":"96","messageId":"95","endLine":48,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":37,"column":5,"nodeType":"96","messageId":"95","endLine":37,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":41,"column":5,"nodeType":"96","messageId":"95","endLine":41,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":45,"column":5,"nodeType":"96","messageId":"95","endLine":45,"endColumn":76},{"ruleId":"92","severity":1,"message":"93","line":50,"column":5,"nodeType":"96","messageId":"95","endLine":50,"endColumn":75},{"ruleId":"92","severity":1,"message":"93","line":55,"column":5,"nodeType":"96","messageId":"95","endLine":55,"endColumn":77},{"ruleId":"92","severity":1,"message":"93","line":66,"column":5,"nodeType":"96","messageId":"95","endLine":66,"endColumn":79},{"ruleId":"92","severity":1,"message":"93","line":72,"column":5,"nodeType":"96","messageId":"95","endLine":72,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","FunctionExpression","@typescript-eslint/no-unused-vars","'LocalDB' is defined but never used.","Identifier","unusedVar","'QuestionSetSlotState' is defined but never used.","'CustomLink' is defined but never used."]